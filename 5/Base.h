#include "Start.h"

void array(int* A, int* B, int N)
{
	setlocale(LC_ALL, "RUS");
	int a, a_1, R, i, c, b = 0,n=N;
	srand(time(0));
	R = rand();
	//a)ввод данных (вручную || рандом || заданные программно значения элементов массива);
	printf("Выберите тип ввода массива:\n1)вручную\n2)рандом\n3)заданные программно значения элементов массива\n");
	do
	{
		scanf("%d", &a);
	} while (!(a >= 1 && a <= 3));
	switch (a)
	{
	case 1:
		for (i = 0; i < N; i++) {
			printf("a[%d] = ", i);
			scanf("%d", &a_1);
			A[i] = a_1;
		}break;
	case 2:
		for (int i = 0; i < N; i++)
		{
			do 
			{
				R = rand();
			} while (R < 0 || R>100);
			A[i] = R;
		}
		printf("\n");
		break;
	case 3:
		int A[5] = { 0, 1, 2, 3, 4 };
		printf("\n");
		break;
	}
	//b)вывод значения элементов массива
	for (int i = 0; i < N; i++)
	{
		printf("%d; ", A[i]);
	}
	printf("\n");
	//c)поиск максимального и минимального элементов и их номеров;
	int nMax = 0, nMin = 0, Max = A[0], Min = A[0], sum = 0;
	for (i = 1; i < N; i++) {
		if (Max < A[i]) { Max = A[i]; nMax = i; }
		if (Min > A[i]) { Min = A[i]; nMin = i; }
		sum += A[i];
	}
	printf("Max A[%d] = %d; Min A[%d] =%d;\n", nMax, Max, nMin, Min);
	//d)поиск суммы и среднего значения в массиве;
	float srzn = (sum+A[0]) / n;
	printf("Сумма = %d; Среднее значение = %0.2f\n", sum+A[0], srzn);
	//e)сортировку массива;
	for (int i = 0; i < N - 1; i++)
	{
		for (int j = (N - 1); j > i; j--) // для всех элементов после i-ого
		{
			if (A[j - 1] > A[j]) // если текущий элемент меньше предыдущего
			{
				int temp = A[j - 1]; // меняем их местами
				A[j - 1] = A[j];
				A[j] = temp;
			}
		}
	}
	OutArray(A, N);
	//f)перепись элементов сортированного массива в новый массив, значения которых больше среднего значения, а также вывод его на экран;
	for (i = 0; i < N; i++)
		if (A[i] > srzn) {
			b++; B[i] = A[i]; printf("%d ",B[i]);
		}
	printf("\n");
	//g)реверс элементов исходного массива;
	for (i = 0; i < N / 2; i++)
	{
		c = A[i];
		A[i] = A[N - 1 - i];
		A[N - 1 - i] = c;
	}
	OutArray(A, N);
	//h)циклический сдвиг исходного массива на 1 элемент влево.
	c = A[0];
	for (i = 0; i < N - 1; i++)
		A[i] = A[i + 1];
	A[N - 1] = c;
	// Е_С2_19)	Дан целочисленный массив из 30 элементов. 
//Элементы массива могут принимать произвольные целые значения. 
//Опишите алгоритм, , который находит и выводит номера двух элементов массива, наименее отличающихся друг от друга.
	printf("\nИндивидуальное задание\n");
	int V[30];
	for (int i = 0; i < 30; i++)
	{
		do
		{
			R = rand();
		} while (R>100);
		V[i] = R;
	}
	OutArray(V, 30);
	int nMin_1=0, nMin_2=1,j;
	for (i=1;i<30-1;i++)
		for (j = i + 1; j < 30; j++)
		{			
			if (abs(V[i] - V[j]) < abs(V[nMin_1] - V[nMin_2]))
			{
				nMin_1 = i; nMin_2 = j;
			}
		}
	printf("Минимально отличающиеся элементы А[%d] и A[%d]\n", nMin_1, nMin_2);
}
